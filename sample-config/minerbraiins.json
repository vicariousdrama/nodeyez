{
  "outputFile.comment": "The path to save the generated image",
  "outputFile.type": "string",
  "outputFile": "/home/nodeyez/nodeyez/imageoutput/minerbraiins.png",
  "dataDirectory.comment": "The base path for the directory to store hashrate history",
  "dataDirectory.type": "string",
  "dataDirectory": "/home/nodeyez/nodeyez/data/",
  "miners.comment": "An array of one or more miners",
  "miners.type": "array",
  "miners": [
    {
      "minerlabel.comment": "A unique label to give this miner. It is used as part of the filename and label on image.",
      "minerlabel.type": "string",
      "minerlabel": "",
      "mineraddress.comment": "(required) The ip or host address for your miner on your local lan, accessible from the host running the minerstatus script",
      "mineraddress.type": "string",
      "mineraddress": "127.0.0.1",
      "expectations.comment": "An optional structure defining expectations to monitor for. A setting out of range will cause a warning to be rendered.",
      "expectations.type": "object",
      "expectations": {
        "power.comment": "An optional structure defining power expectations to monitor for",
        "power.type": "object",
        "power": {
          "low.comment": "An optional property to define the low end of expected power range, in watts",
          "low.type": "integer",
          "low": 800,
          "high.comment": "An optional property to define the high end of expected power range, in watts",
          "high.type": "integer",
          "high": 1000
        },
        "hashrate.comment": "An optional structure defining hashrate expectations to monitor for",
        "hashrate.type": "object",
        "hashrate": {
          "low.comment": "An optional property to define the low end of expected hashrate, in MH/s",
          "low.type": "integer",
          "low": 11500000
        },
        "pools.comment": "An optional array of pool definitions of expected pools to send hashrate to",
        "pools.type": "array",
        "pools": [
          {
            "url.comment": "The url for a pool that is expected to be configured",
            "url.type": "string",
            "url": "stratum2+tcp://v2.us-east.stratum.slushpool.com",
            "user.comment": "The user for a pool that is expected to be configured",
            "user.type": "string",
            "user": "YourUsername.YourWorkername"
          }
        ]
      }
    }
  ],
  "sleepInterval.comment": "The amount of time, in seconds, the script should wait before data gathering and image creation again",
  "sleepInterval.type": "integer",
  "sleepInterval": 60,
  "colorTextFG.comment": "The color of the text expressed as a Hexadecimal color specifier",
  "colorTextFG.type": "string",
  "colorTextFG": "#ffffff",
  "colorHot.comment": "The color to show the temperature exceeding the hot threshold expressed as a Hexadecimal color specifier",
  "colorHot.type": "string",
  "colorHot": "#ffaa00",
  "colorDangerous.comment": "The color to show the temperature exceeding the dangerous threshold expressed as a Hexadecimal color specifier",
  "colorDangerous.type": "string",
  "colorDangerous": "#ff0000",
  "colorBackground.comment": "The background color of the image expressed as a Hexadecimal color specifier",
  "colorBackground.type": "string",
  "colorBackground": "#000000",
  "colorHashrateBox.comment": "The color of the border, average line and label backgrounds for the hashrate graph expressed as a Hexadecimal color specifier",
  "colorHashrateBox.type": "string",
  "colorHashrateBox": "#202020",
  "colorHashratePlot.comment": "The color to plot each hashrate value within the hashrate graph expressed as a Hexadecimal color specifier",
  "colorHashratePlot.type": "string",
  "colorHashratePlot": "#2f3fc5",
  "colorHashrateMA.comment": "The color to draw the hashrate moving average line expressed as a Hexadecimal color specifier",
  "colorHashrateMA.type": "string",
  "colorhashrateMA": "#40ff40"
}

